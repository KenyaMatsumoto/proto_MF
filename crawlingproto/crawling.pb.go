// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: crawlingproto/crawling.proto

package crawlingproto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInput *UserInput `protobuf:"bytes,1,opt,name=user_input,json=userInput,proto3" json:"user_input,omitempty"`
	Pass      string     `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	SiteKind  int32      `protobuf:"varint,3,opt,name=site_kind,json=siteKind,proto3" json:"site_kind,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawlingproto_crawling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawlingproto_crawling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_crawlingproto_crawling_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetUserInput() *UserInput {
	if x != nil {
		return x.UserInput
	}
	return nil
}

func (x *UserRequest) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *UserRequest) GetSiteKind() int32 {
	if x != nil {
		return x.SiteKind
	}
	return 0
}

type UserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserInput) Reset() {
	*x = UserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawlingproto_crawling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput) ProtoMessage() {}

func (x *UserInput) ProtoReflect() protoreflect.Message {
	mi := &file_crawlingproto_crawling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput.ProtoReflect.Descriptor instead.
func (*UserInput) Descriptor() ([]byte, []int) {
	return file_crawlingproto_crawling_proto_rawDescGZIP(), []int{1}
}

func (x *UserInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawlingproto_crawling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawlingproto_crawling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_crawlingproto_crawling_proto_rawDescGZIP(), []int{2}
}

func (x *UserResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

var File_crawlingproto_crawling_proto protoreflect.FileDescriptor

var file_crawlingproto_crawling_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x5b, 0x0a, 0x0f, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_crawlingproto_crawling_proto_rawDescOnce sync.Once
	file_crawlingproto_crawling_proto_rawDescData = file_crawlingproto_crawling_proto_rawDesc
)

func file_crawlingproto_crawling_proto_rawDescGZIP() []byte {
	file_crawlingproto_crawling_proto_rawDescOnce.Do(func() {
		file_crawlingproto_crawling_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawlingproto_crawling_proto_rawDescData)
	})
	return file_crawlingproto_crawling_proto_rawDescData
}

var file_crawlingproto_crawling_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_crawlingproto_crawling_proto_goTypes = []interface{}{
	(*UserRequest)(nil),  // 0: crawlingproto.UserRequest
	(*UserInput)(nil),    // 1: crawlingproto.UserInput
	(*UserResponse)(nil), // 2: crawlingproto.UserResponse
}
var file_crawlingproto_crawling_proto_depIdxs = []int32{
	1, // 0: crawlingproto.UserRequest.user_input:type_name -> crawlingproto.UserInput
	0, // 1: crawlingproto.CrawlingService.UserHandler:input_type -> crawlingproto.UserRequest
	2, // 2: crawlingproto.CrawlingService.UserHandler:output_type -> crawlingproto.UserResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_crawlingproto_crawling_proto_init() }
func file_crawlingproto_crawling_proto_init() {
	if File_crawlingproto_crawling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crawlingproto_crawling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawlingproto_crawling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawlingproto_crawling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawlingproto_crawling_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawlingproto_crawling_proto_goTypes,
		DependencyIndexes: file_crawlingproto_crawling_proto_depIdxs,
		MessageInfos:      file_crawlingproto_crawling_proto_msgTypes,
	}.Build()
	File_crawlingproto_crawling_proto = out.File
	file_crawlingproto_crawling_proto_rawDesc = nil
	file_crawlingproto_crawling_proto_goTypes = nil
	file_crawlingproto_crawling_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrawlingServiceClient is the client API for CrawlingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrawlingServiceClient interface {
	UserHandler(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
}

type crawlingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCrawlingServiceClient(cc grpc.ClientConnInterface) CrawlingServiceClient {
	return &crawlingServiceClient{cc}
}

func (c *crawlingServiceClient) UserHandler(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/crawlingproto.CrawlingService/UserHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrawlingServiceServer is the server API for CrawlingService service.
type CrawlingServiceServer interface {
	UserHandler(context.Context, *UserRequest) (*UserResponse, error)
}

// UnimplementedCrawlingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCrawlingServiceServer struct {
}

func (*UnimplementedCrawlingServiceServer) UserHandler(context.Context, *UserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserHandler not implemented")
}

func RegisterCrawlingServiceServer(s *grpc.Server, srv CrawlingServiceServer) {
	s.RegisterService(&_CrawlingService_serviceDesc, srv)
}

func _CrawlingService_UserHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrawlingServiceServer).UserHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawlingproto.CrawlingService/UserHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrawlingServiceServer).UserHandler(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrawlingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crawlingproto.CrawlingService",
	HandlerType: (*CrawlingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserHandler",
			Handler:    _CrawlingService_UserHandler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crawlingproto/crawling.proto",
}
